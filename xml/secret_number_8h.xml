<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="secret_number_8h" kind="file" language="C++">
    <compoundname>secretNumber.h</compoundname>
    <includes local="no">stdbool.h</includes>
    <includedby refid="home_8cpp" local="yes">home.cpp</includedby>
    <includedby refid="home_8h" local="yes">home.h</includedby>
    <includedby refid="run_all_test_8cpp" local="yes">runAllTest.cpp</includedby>
    <includedby refid="secret_num_tests_8cpp" local="yes">secretNumTests.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>secretNumber.h</label>
        <link refid="secret_number_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdbool.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>C++lPointsProject.cpp</label>
        <link refid="_c_09_09l_points_project_8cpp"/>
      </node>
      <node id="2">
        <label>home.cpp</label>
        <link refid="home_8cpp"/>
      </node>
      <node id="3">
        <label>home.h</label>
        <link refid="home_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>runAllTest.cpp</label>
        <link refid="run_all_test_8cpp"/>
      </node>
      <node id="6">
        <label>secretNumTests.cpp</label>
        <link refid="secret_num_tests_8cpp"/>
      </node>
      <node id="1">
        <label>secretNumber.h</label>
        <link refid="secret_number_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="secret_number_8h_1a318f35b6d5a6e2387867b2aa93880df0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getSecretNumber</definition>
        <argsstring>(int lowerBound, int upperBound)</argsstring>
        <name>getSecretNumber</name>
        <param>
          <type>int</type>
          <declname>lowerBound</declname>
        </param>
        <param>
          <type>int</type>
          <declname>upperBound</declname>
        </param>
        <briefdescription>
<para>Generates a random secret number between the lower and upper bounds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lowerBound</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower bound of the range for the secret number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upperBound</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper bound of the range for the secret number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The randomly generated secret number </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="secretNumber.h" line="14" column="5" bodyfile="secretNumber.cpp" bodystart="14" bodyend="17" declfile="secretNumber.h" declline="14" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="secret_number_8h_1ad15893733011fea006d6e6f7af501fb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int secNumTests</definition>
        <argsstring>()</argsstring>
        <name>secNumTests</name>
        <briefdescription>
<para>Runs all the tests for the secret number game. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="secretNumber.h" line="19" column="5" bodyfile="secretNumTests.cpp" bodystart="18" bodyend="21" declfile="secretNumber.h" declline="19" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="secret_number_8h_1a67a37d86a6c62e5ba07e1894e8e18992" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool validDifficulty</definition>
        <argsstring>(char difficulty)</argsstring>
        <name>validDifficulty</name>
        <param>
          <type>char</type>
          <declname>difficulty</declname>
        </param>
        <briefdescription>
<para>Checks if the input for the difficulty level is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>difficulty</parametername>
</parameternamelist>
<parameterdescription>
<para>The difficulty level taken from the input as a char </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the input is valid, false if it is not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="secretNumber.h" line="26" column="6" bodyfile="secretNumber.cpp" bodystart="24" bodyend="32" declfile="secretNumber.h" declline="26" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="secret_number_8h_1a71d953cc6e73849e18db29f5920cdd6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char getDifficulty</definition>
        <argsstring>()</argsstring>
        <name>getDifficulty</name>
        <briefdescription>
<para>Gets the difficulty level from the user input. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The difficulty level chosen by the user as a char </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="secretNumber.h" line="32" column="6" bodyfile="secretNumber.cpp" bodystart="38" bodyend="54" declfile="secretNumber.h" declline="32" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="secret_number_8h_1a9e8ea5ba41b17c6fc9e13fff1d8f7c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool validGuess</definition>
        <argsstring>(int guess, int lowerBound, int upperBound, int check)</argsstring>
        <name>validGuess</name>
        <param>
          <type>int</type>
          <declname>guess</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lowerBound</declname>
        </param>
        <param>
          <type>int</type>
          <declname>upperBound</declname>
        </param>
        <param>
          <type>int</type>
          <declname>check</declname>
        </param>
        <briefdescription>
<para>Checks if the input for a guess is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>guess</parametername>
</parameternamelist>
<parameterdescription>
<para>The guess as an integer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lowerBound</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower bound of the range for the secret number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upperBound</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper bound of the range for the secret number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>check</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of guesses made </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the input is valid, false if it is not</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>guess</parametername>
</parameternamelist>
<parameterdescription>
<para>The guess as an integer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lowerBound</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower bound of the range for the secret number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upperBound</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper bound of the range for the secret number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>check</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of scanf to determine if it is a number or not </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the input is valid, false if it is not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="secretNumber.h" line="42" column="6" bodyfile="secretNumber.cpp" bodystart="64" bodyend="71" declfile="secretNumber.h" declline="42" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="secret_number_8h_1a44a8d652c63ebe56e1ad6beb78497454" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getGuess</definition>
        <argsstring>(int lowerBound, int upperBound)</argsstring>
        <name>getGuess</name>
        <param>
          <type>int</type>
          <declname>lowerBound</declname>
        </param>
        <param>
          <type>int</type>
          <declname>upperBound</declname>
        </param>
        <briefdescription>
<para>Gets the guess from input and checks if it is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lowerBound</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower bound of the range for the secret number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upperBound</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper bound of the range for the secret number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The guess as an integer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="secretNumber.h" line="51" column="5" bodyfile="secretNumber.cpp" bodystart="80" bodyend="96" declfile="secretNumber.h" declline="51" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="secret_number_8h_1a1d6cc0c97789911f0f099a00666d81af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void play</definition>
        <argsstring>(char difficulty)</argsstring>
        <name>play</name>
        <param>
          <type>char</type>
          <declname>difficulty</declname>
        </param>
        <briefdescription>
<para>Plays the game. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>difficulty</parametername>
</parameternamelist>
<parameterdescription>
<para>The difficulty level taken from input as a char </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="secretNumber.h" line="57" column="6" bodyfile="secretNumber.cpp" bodystart="103" bodyend="157" declfile="secretNumber.h" declline="57" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="secret_number_8h_1aee6a718b9581fa87530597d0b8516c26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool validPlayAgain</definition>
        <argsstring>(char playAgain)</argsstring>
        <name>validPlayAgain</name>
        <param>
          <type>char</type>
          <declname>playAgain</declname>
        </param>
        <briefdescription>
<para>Checks if the input for play again is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>playAgain</parametername>
</parameternamelist>
<parameterdescription>
<para>The input for play again as a char </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the input is valid, false if it is not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="secretNumber.h" line="64" column="6" bodyfile="secretNumber.cpp" bodystart="164" bodyend="171" declfile="secretNumber.h" declline="64" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="secret_number_8h_1a638ae18485bb62592aca2c829886edd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool playAgain</definition>
        <argsstring>()</argsstring>
        <name>playAgain</name>
        <briefdescription>
<para>Asks the user if they want to play again. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the user wants to play again, false if they do not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="secretNumber.h" line="71" column="6" bodyfile="secretNumber.cpp" bodystart="177" bodyend="200" declfile="secretNumber.h" declline="71" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="secret_number_8h_1ae0ac8011b44af9f81bfd24ffbd881ca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void secretNumberStart</definition>
        <argsstring>()</argsstring>
        <name>secretNumberStart</name>
        <briefdescription>
<para>Starts the game. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="secretNumber.h" line="76" column="6" bodyfile="secretNumber.cpp" bodystart="206" bodyend="227" declfile="secretNumber.h" declline="76" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Header file for the Secret Number game. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Rochelle Cole </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SECRETNUMBER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECRETNUMBER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="secret_number_8h_1a318f35b6d5a6e2387867b2aa93880df0" kindref="member">getSecretNumber</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowerBound,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>upperBound);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="secret_number_8h_1ad15893733011fea006d6e6f7af501fb0" kindref="member">secNumTests</ref>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="secret_number_8h_1a67a37d86a6c62e5ba07e1894e8e18992" kindref="member">validDifficulty</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>difficulty);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="secret_number_8h_1a71d953cc6e73849e18db29f5920cdd6e" kindref="member">getDifficulty</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="secret_number_8h_1a9e8ea5ba41b17c6fc9e13fff1d8f7c06" kindref="member">validGuess</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>guess,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowerBound,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>upperBound,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>check);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="secret_number_8h_1a44a8d652c63ebe56e1ad6beb78497454" kindref="member">getGuess</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowerBound,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>upperBound);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="secret_number_8h_1a1d6cc0c97789911f0f099a00666d81af" kindref="member">play</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>difficulty);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="secret_number_8h_1aee6a718b9581fa87530597d0b8516c26" kindref="member">validPlayAgain</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="secret_number_8h_1a638ae18485bb62592aca2c829886edd0" kindref="member">playAgain</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="secret_number_8h_1a638ae18485bb62592aca2c829886edd0" kindref="member">playAgain</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="secret_number_8h_1ae0ac8011b44af9f81bfd24ffbd881ca3" kindref="member">secretNumberStart</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>SECRETNUMBER_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="secretNumber.h"/>
  </compounddef>
</doxygen>
