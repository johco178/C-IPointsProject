<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="secret_number_8cpp" kind="file" language="C++">
    <compoundname>secretNumber.cpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">time.h</includes>
    <incdepgraph>
      <node id="1">
        <label>secretNumber.cpp</label>
        <link refid="secret_number_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ctype.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>time.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="secret_number_8cpp_1a318f35b6d5a6e2387867b2aa93880df0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getSecretNumber</definition>
        <argsstring>(int lowerBound, int upperBound)</argsstring>
        <name>getSecretNumber</name>
        <param>
          <type>int</type>
          <declname>lowerBound</declname>
        </param>
        <param>
          <type>int</type>
          <declname>upperBound</declname>
        </param>
        <briefdescription>
<para>Generates a random secret number between the lower and upper bounds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lowerBound</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower bound of the range for the secret number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upperBound</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper bound of the range for the secret number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The randomly generated secret number </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="secretNumber.cpp" line="14" column="5" bodyfile="secretNumber.cpp" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="secret_number_8cpp_1a67a37d86a6c62e5ba07e1894e8e18992" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool validDifficulty</definition>
        <argsstring>(char difficulty)</argsstring>
        <name>validDifficulty</name>
        <param>
          <type>char</type>
          <declname>difficulty</declname>
        </param>
        <briefdescription>
<para>Checks if the input for the difficulty level is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>difficulty</parametername>
</parameternamelist>
<parameterdescription>
<para>The difficulty level taken from the input as a char </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the input is valid, false if it is not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="secretNumber.cpp" line="24" column="6" bodyfile="secretNumber.cpp" bodystart="24" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="secret_number_8cpp_1a71d953cc6e73849e18db29f5920cdd6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char getDifficulty</definition>
        <argsstring>()</argsstring>
        <name>getDifficulty</name>
        <briefdescription>
<para>Gets the difficulty level from the user input. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The difficulty level chosen by the user as a char </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="secretNumber.cpp" line="38" column="6" bodyfile="secretNumber.cpp" bodystart="38" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="secret_number_8cpp_1a9e8ea5ba41b17c6fc9e13fff1d8f7c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool validGuess</definition>
        <argsstring>(int guess, int lowerBound, int upperBound, int check)</argsstring>
        <name>validGuess</name>
        <param>
          <type>int</type>
          <declname>guess</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lowerBound</declname>
        </param>
        <param>
          <type>int</type>
          <declname>upperBound</declname>
        </param>
        <param>
          <type>int</type>
          <declname>check</declname>
        </param>
        <briefdescription>
<para>Checks if the input for a guess is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>guess</parametername>
</parameternamelist>
<parameterdescription>
<para>The guess as an integer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lowerBound</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower bound of the range for the secret number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upperBound</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper bound of the range for the secret number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>check</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of scanf to determine if it is a number or not </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the input is valid, false if it is not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="secretNumber.cpp" line="64" column="6" bodyfile="secretNumber.cpp" bodystart="64" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="secret_number_8cpp_1a44a8d652c63ebe56e1ad6beb78497454" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getGuess</definition>
        <argsstring>(int lowerBound, int upperBound)</argsstring>
        <name>getGuess</name>
        <param>
          <type>int</type>
          <declname>lowerBound</declname>
        </param>
        <param>
          <type>int</type>
          <declname>upperBound</declname>
        </param>
        <briefdescription>
<para>Gets the guess from input and checks if it is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lowerBound</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower bound of the range for the secret number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upperBound</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper bound of the range for the secret number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The guess as an integer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="secretNumber.cpp" line="80" column="5" bodyfile="secretNumber.cpp" bodystart="80" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="secret_number_8cpp_1a1d6cc0c97789911f0f099a00666d81af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void play</definition>
        <argsstring>(char difficulty)</argsstring>
        <name>play</name>
        <param>
          <type>char</type>
          <declname>difficulty</declname>
        </param>
        <briefdescription>
<para>Plays the game. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>difficulty</parametername>
</parameternamelist>
<parameterdescription>
<para>The difficulty level taken from input as a char </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="secretNumber.cpp" line="103" column="6" bodyfile="secretNumber.cpp" bodystart="103" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="secret_number_8cpp_1aee6a718b9581fa87530597d0b8516c26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool validPlayAgain</definition>
        <argsstring>(char playAgain)</argsstring>
        <name>validPlayAgain</name>
        <param>
          <type>char</type>
          <declname>playAgain</declname>
        </param>
        <briefdescription>
<para>Checks if the input for play again is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>playAgain</parametername>
</parameternamelist>
<parameterdescription>
<para>The input for play again as a char </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the input is valid, false if it is not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="secretNumber.cpp" line="164" column="6" bodyfile="secretNumber.cpp" bodystart="164" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="secret_number_8cpp_1a638ae18485bb62592aca2c829886edd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool playAgain</definition>
        <argsstring>()</argsstring>
        <name>playAgain</name>
        <briefdescription>
<para>Asks the user if they want to play again. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the user wants to play again, false if they do not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="secretNumber.cpp" line="177" column="6" bodyfile="secretNumber.cpp" bodystart="177" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="secret_number_8cpp_1ae0ac8011b44af9f81bfd24ffbd881ca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void secretNumberStart</definition>
        <argsstring>()</argsstring>
        <name>secretNumberStart</name>
        <briefdescription>
<para>Starts the game. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="secretNumber.cpp" line="206" column="6" bodyfile="secretNumber.cpp" bodystart="206" bodyend="227"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="secret_number_8cpp_1a318f35b6d5a6e2387867b2aa93880df0" kindref="member">getSecretNumber</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowerBound,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>upperBound)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>srand(time(0));<sp/></highlight><highlight class="comment">//<sp/>Seed<sp/>the<sp/>random<sp/>number<sp/>generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rand()<sp/>%<sp/>(upperBound<sp/>-<sp/>lowerBound<sp/>+<sp/>1)<sp/>+<sp/>lowerBound;</highlight><highlight class="comment">//<sp/>returns<sp/>a<sp/>random<sp/>number<sp/>between<sp/>the<sp/>lower<sp/>and<sp/>upper<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="secret_number_8cpp_1a67a37d86a6c62e5ba07e1894e8e18992" kindref="member">validDifficulty</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>difficulty)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isValid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(difficulty<sp/>==<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal"><sp/>||<sp/>difficulty<sp/>==<sp/></highlight><highlight class="charliteral">&apos;m&apos;</highlight><highlight class="normal"><sp/>||<sp/>difficulty<sp/>==<sp/></highlight><highlight class="charliteral">&apos;h&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isValid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isValid;</highlight><highlight class="comment">//returns<sp/>the<sp/>difficulty<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="secret_number_8cpp_1a71d953cc6e73849e18db29f5920cdd6e" kindref="member">getDifficulty</ref>()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>difficulty;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>valid;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Choose<sp/>difficulty<sp/>level<sp/>(e:<sp/>easy,<sp/>m:<sp/>medium,<sp/>h:<sp/>hard):<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>scanf(</highlight><highlight class="stringliteral">&quot;<sp/>%c&quot;</highlight><highlight class="normal">,<sp/>&amp;difficulty);<sp/></highlight><highlight class="comment">//assign<sp/>the<sp/>value<sp/>of<sp/>scanning<sp/>a<sp/>character<sp/>from<sp/>the<sp/>user<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>difficulty<sp/>=<sp/>tolower(difficulty);</highlight><highlight class="comment">//converts<sp/>the<sp/>input<sp/>to<sp/>lowercase<sp/>incase<sp/>of<sp/>valid<sp/>uppercase<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>valid<sp/>=<sp/><ref refid="secret_number_8cpp_1a67a37d86a6c62e5ba07e1894e8e18992" kindref="member">validDifficulty</ref>(difficulty);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!valid)</highlight><highlight class="comment">//checks<sp/>if<sp/>the<sp/>input<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;That<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>input.<sp/>Please<sp/>choose<sp/>&apos;e&apos;<sp/>for<sp/>easy,<sp/>&apos;m&apos;<sp/>for<sp/>medium,<sp/>or<sp/>&apos;h&apos;<sp/>for<sp/>hard.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanf(</highlight><highlight class="stringliteral">&quot;<sp/>%c&quot;</highlight><highlight class="normal">,<sp/>&amp;difficulty);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difficulty<sp/>=<sp/>tolower(difficulty);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid<sp/>=<sp/><ref refid="secret_number_8cpp_1a67a37d86a6c62e5ba07e1894e8e18992" kindref="member">validDifficulty</ref>(difficulty);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>difficulty;</highlight><highlight class="comment">//returns<sp/>the<sp/>difficulty<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="secret_number_8cpp_1a9e8ea5ba41b17c6fc9e13fff1d8f7c06" kindref="member">validGuess</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>guess,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowerBound,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>upperBound,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>check)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isValid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check<sp/>==<sp/>0<sp/>||<sp/>guess<sp/>&lt;<sp/>lowerBound<sp/>||<sp/>guess<sp/>&gt;<sp/>upperBound)</highlight><highlight class="comment">//checks<sp/>if<sp/>it<sp/>is<sp/>a<sp/>num<sp/>and<sp/>within<sp/>the<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isValid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isValid;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="secret_number_8cpp_1a44a8d652c63ebe56e1ad6beb78497454" kindref="member">getGuess</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowerBound,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>upperBound)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>guess,<sp/>check;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isValid;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Enter<sp/>a<sp/>guess<sp/>between<sp/>%d<sp/>and<sp/>%d<sp/>:<sp/>&quot;</highlight><highlight class="normal">,<sp/>lowerBound,<sp/>upperBound);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>check<sp/>=<sp/>scanf(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;guess);<sp/></highlight><highlight class="comment">//assign<sp/>the<sp/>value<sp/>of<sp/>scanning<sp/>a<sp/>number<sp/>from<sp/>the<sp/>user<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>isValid<sp/>=<sp/><ref refid="secret_number_8cpp_1a9e8ea5ba41b17c6fc9e13fff1d8f7c06" kindref="member">validGuess</ref>(guess,<sp/>lowerBound,<sp/>upperBound,<sp/>check);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!isValid)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getchar()<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;That<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>input.\nPlease<sp/>enter<sp/>a<sp/>number<sp/>between<sp/>%d<sp/>and<sp/>%d:\n&quot;</highlight><highlight class="normal">,<sp/>lowerBound,<sp/>upperBound);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check<sp/>=<sp/>scanf(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;guess);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isValid<sp/>=<sp/><ref refid="secret_number_8cpp_1a9e8ea5ba41b17c6fc9e13fff1d8f7c06" kindref="member">validGuess</ref>(guess,<sp/>lowerBound,<sp/>upperBound,<sp/>check);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>guess;</highlight><highlight class="comment">//returns<sp/>the<sp/>guess<sp/>if<sp/>it<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="secret_number_8cpp_1a1d6cc0c97789911f0f099a00666d81af" kindref="member">play</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>difficulty){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowerBound,<sp/>upperBound,<sp/>maxAttempts,<sp/>attempts<sp/>=<sp/>0,<sp/>secretNumber,<sp/>guess,<sp/>attemptsLeft,<sp/>check;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Sets<sp/>the<sp/>lower<sp/>and<sp/>upper<sp/>bounds<sp/>and<sp/>max<sp/>attempts<sp/>based<sp/>on<sp/>the<sp/>difficulty<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(difficulty<sp/>==<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lowerBound<sp/>=<sp/>1;<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upperBound<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxAttempts<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(difficulty<sp/>==<sp/></highlight><highlight class="charliteral">&apos;m&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lowerBound<sp/>=<sp/>1;<sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upperBound<sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxAttempts<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(difficulty<sp/>==<sp/></highlight><highlight class="charliteral">&apos;h&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lowerBound<sp/>=<sp/>1;<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upperBound<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxAttempts<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Gets<sp/>a<sp/>secret<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>secretNumber<sp/>=<sp/><ref refid="secret_number_8cpp_1a318f35b6d5a6e2387867b2aa93880df0" kindref="member">getSecretNumber</ref>(lowerBound,<sp/>upperBound);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;The<sp/>secret<sp/>number<sp/>is<sp/>between<sp/>%d<sp/>and<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>lowerBound,<sp/>upperBound);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;You<sp/>have<sp/>%d<sp/>attempts<sp/>to<sp/>guess<sp/>the<sp/>number.\n&quot;</highlight><highlight class="normal">,<sp/>maxAttempts);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//attemptsLeft<sp/>set<sp/>to<sp/>max<sp/>attempts<sp/>and<sp/>is<sp/>decremented<sp/>each<sp/>time<sp/>the<sp/>user<sp/>guesses<sp/>a<sp/>valid<sp/>guess</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>attemptsLeft<sp/>=<sp/>maxAttempts;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Gets<sp/>the<sp/>user&apos;s<sp/>guess</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guess<sp/>=<sp/><ref refid="secret_number_8cpp_1a44a8d652c63ebe56e1ad6beb78497454" kindref="member">getGuess</ref>(lowerBound,<sp/>upperBound);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Increments<sp/>the<sp/>number<sp/>of<sp/>attempts<sp/>and<sp/>decrements<sp/>the<sp/>number<sp/>of<sp/>attempts<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attempts++;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attemptsLeft--;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Checks<sp/>if<sp/>the<sp/>guess<sp/>is<sp/>correct<sp/>and<sp/>if<sp/>not<sp/>tells<sp/>the<sp/>user<sp/>if<sp/>they<sp/>guessed<sp/>too<sp/>high<sp/>or<sp/>too<sp/>low</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(guess<sp/>&gt;<sp/>secretNumber)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;You<sp/>guessed<sp/>too<sp/>high!<sp/>Try<sp/>again.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(guess<sp/>&lt;<sp/>secretNumber)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;You<sp/>guessed<sp/>too<sp/>low!<sp/>Try<sp/>again.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Huzzah!<sp/>You<sp/>guessed<sp/>the<sp/>secret<sp/>number<sp/>%d<sp/>in<sp/>%d<sp/>attempts.\n&quot;</highlight><highlight class="normal">,<sp/>guess,<sp/><sp/>attempts);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>user<sp/>runs<sp/>out<sp/>of<sp/>attempts,<sp/>the<sp/>game<sp/>ends<sp/>and<sp/>the<sp/>secret<sp/>number<sp/>is<sp/>revealed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attempts<sp/>&gt;=<sp/>maxAttempts)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Sorry,<sp/>you&apos;ve<sp/>reached<sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>attempts.<sp/>The<sp/>number<sp/>was<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>secretNumber);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Tells<sp/>the<sp/>user<sp/>how<sp/>many<sp/>attempts<sp/>they<sp/>have<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;You<sp/>have<sp/>%d<sp/>attempts<sp/>left.\n<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>attemptsLeft);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(guess<sp/>!=<sp/>secretNumber);</highlight><highlight class="comment">//loops<sp/>until<sp/>the<sp/>user<sp/>guesses<sp/>the<sp/>correct<sp/>number<sp/>or<sp/>runs<sp/>out<sp/>of<sp/>attempts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="secret_number_8cpp_1aee6a718b9581fa87530597d0b8516c26" kindref="member">validPlayAgain</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="secret_number_8cpp_1a638ae18485bb62592aca2c829886edd0" kindref="member">playAgain</ref>)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isValid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="secret_number_8cpp_1a638ae18485bb62592aca2c829886edd0" kindref="member">playAgain</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;y&apos;</highlight><highlight class="normal"><sp/>||<sp/><ref refid="secret_number_8cpp_1a638ae18485bb62592aca2c829886edd0" kindref="member">playAgain</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isValid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isValid;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="secret_number_8cpp_1a638ae18485bb62592aca2c829886edd0" kindref="member">playAgain</ref>()<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="secret_number_8cpp_1a638ae18485bb62592aca2c829886edd0" kindref="member">playAgain</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isValid;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nWould<sp/>you<sp/>like<sp/>to<sp/>play<sp/>The<sp/>Secret<sp/>Number<sp/>game<sp/>again?<sp/>\nPlease<sp/>enter<sp/>&apos;y&apos;<sp/>to<sp/>play<sp/>again<sp/>or<sp/>&apos;n&apos;<sp/>to<sp/>exit<sp/>to<sp/>the<sp/>game<sp/>menu:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>scanf(</highlight><highlight class="stringliteral">&quot;<sp/>%c&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="secret_number_8cpp_1a638ae18485bb62592aca2c829886edd0" kindref="member">playAgain</ref>);<sp/></highlight><highlight class="comment">//assign<sp/>the<sp/>value<sp/>of<sp/>scanning<sp/>a<sp/>character<sp/>from<sp/>the<sp/>user<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secret_number_8cpp_1a638ae18485bb62592aca2c829886edd0" kindref="member">playAgain</ref><sp/>=<sp/>tolower(<ref refid="secret_number_8cpp_1a638ae18485bb62592aca2c829886edd0" kindref="member">playAgain</ref>);<sp/></highlight><highlight class="comment">//converts<sp/>the<sp/>input<sp/>to<sp/>lowercase<sp/>incase<sp/>of<sp/>valid<sp/>uppercase<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>isValid<sp/>=<sp/><ref refid="secret_number_8cpp_1aee6a718b9581fa87530597d0b8516c26" kindref="member">validPlayAgain</ref>(<ref refid="secret_number_8cpp_1a638ae18485bb62592aca2c829886edd0" kindref="member">playAgain</ref>);</highlight><highlight class="comment">//checks<sp/>if<sp/>the<sp/>input<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!isValid)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;That<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>input.<sp/>Please<sp/>choose<sp/>&apos;y&apos;<sp/>to<sp/>play<sp/>again<sp/>or<sp/>&apos;n&apos;<sp/>to<sp/>return<sp/>to<sp/>the<sp/>menu.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanf(</highlight><highlight class="stringliteral">&quot;<sp/>%c&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="secret_number_8cpp_1a638ae18485bb62592aca2c829886edd0" kindref="member">playAgain</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="secret_number_8cpp_1a638ae18485bb62592aca2c829886edd0" kindref="member">playAgain</ref><sp/>=<sp/>tolower(<ref refid="secret_number_8cpp_1a638ae18485bb62592aca2c829886edd0" kindref="member">playAgain</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isValid<sp/>=<sp/><ref refid="secret_number_8cpp_1aee6a718b9581fa87530597d0b8516c26" kindref="member">validPlayAgain</ref>(<ref refid="secret_number_8cpp_1a638ae18485bb62592aca2c829886edd0" kindref="member">playAgain</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="secret_number_8cpp_1a638ae18485bb62592aca2c829886edd0" kindref="member">playAgain</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;y&apos;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//if<sp/>the<sp/>user<sp/>wants<sp/>to<sp/>play<sp/>again<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>user<sp/>wants<sp/>to<sp/>exit<sp/>to<sp/>the<sp/>game<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="secret_number_8cpp_1ae0ac8011b44af9f81bfd24ffbd881ca3" kindref="member">secretNumberStart</ref>()<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secretNumber,<sp/>guess,<sp/>attempts<sp/>=<sp/>0,<sp/>maxAttempts;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowerBound,<sp/>upperBound;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>difficulty;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Gets<sp/>the<sp/>difficulty<sp/>level<sp/>from<sp/>the<sp/>user<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Welcome<sp/>to<sp/>the<sp/>Secret<sp/>Number<sp/>Game!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>difficulty<sp/>=<sp/><ref refid="secret_number_8cpp_1a71d953cc6e73849e18db29f5920cdd6e" kindref="member">getDifficulty</ref>();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Plays<sp/>the<sp/>game</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secret_number_8cpp_1a1d6cc0c97789911f0f099a00666d81af" kindref="member">play</ref>(difficulty);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Asks<sp/>the<sp/>user<sp/>if<sp/>they<sp/>want<sp/>to<sp/>play<sp/>again,<sp/>loops<sp/>until<sp/>they<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="secret_number_8cpp_1a638ae18485bb62592aca2c829886edd0" kindref="member">playAgain</ref>())<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Choose<sp/>difficulty<sp/>level<sp/>(e:<sp/>easy,<sp/>m:<sp/>medium,<sp/>h:<sp/>hard):<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanf(</highlight><highlight class="stringliteral">&quot;<sp/>%c&quot;</highlight><highlight class="normal">,<sp/>&amp;difficulty);</highlight><highlight class="comment">//assign<sp/>the<sp/>value<sp/>of<sp/>scanning<sp/>a<sp/>character<sp/>from<sp/>the<sp/>user<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difficulty<sp/>=<sp/>tolower(difficulty);</highlight><highlight class="comment">//converts<sp/>the<sp/>input<sp/>to<sp/>lowercase<sp/>incase<sp/>of<sp/>valid<sp/>uppercase<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="secret_number_8cpp_1a1d6cc0c97789911f0f099a00666d81af" kindref="member">play</ref>(difficulty);</highlight><highlight class="comment">//plays<sp/>the<sp/>game<sp/>with<sp/>specified<sp/>difficulty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="secretNumber.cpp"/>
  </compounddef>
</doxygen>
