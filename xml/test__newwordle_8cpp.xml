<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="test__newwordle_8cpp" kind="file" language="C++">
    <compoundname>test_newwordle.cpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">assert.h</includes>
    <includes refid="newwordle_8h" local="yes">newwordle.h</includes>
    <incdepgraph>
      <node id="5">
        <label>newwordle.h</label>
        <link refid="newwordle_8h"/>
      </node>
      <node id="1">
        <label>test_newwordle.cpp</label>
        <link refid="test__newwordle_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>assert.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="test__newwordle_8cpp_1a45feb1f37ce559e49baf8655d769ef85" prot="public" static="no">
        <name>TEST</name>
        <param><defname>name</defname></param>
        <initializer>static void test_##name(void)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_newwordle.cpp" line="10" column="9" bodyfile="test_newwordle.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__newwordle_8cpp_1a6d22b2e20a26b0d72b5c15912b4e211e" prot="public" static="no">
        <name>RUN_TEST</name>
        <param><defname>name</defname></param>
        <initializer>    do { \
    printf(&quot;Running %s...\n&quot;, #name); \
    test_##name(); \
    printf(&quot;%s passed!\n&quot;, #name); \
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_newwordle.cpp" line="11" column="9" bodyfile="test_newwordle.cpp" bodystart="11" bodyend="15"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="test__newwordle_8cpp_1a7f007a28b63ea09ef2a807e42a55bc80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(conatainsonlychar)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="newwordle_8cpp_1a3f2a499774dc2aa652b360f036e6c41d" kindref="member">conatainsonlychar</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_newwordle.cpp" line="18" column="1" bodyfile="test_newwordle.cpp" bodystart="18" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="test__newwordle_8cpp_1a30cb0654ff03a3bd722b9c475f1fcf38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(toLowerCase)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="newwordle_8cpp_1af0ed0f93c787ed9fd6d6a2823b6f8e02" kindref="member">toLowerCase</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_newwordle.cpp" line="24" column="1" bodyfile="test_newwordle.cpp" bodystart="24" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="test__newwordle_8cpp_1a9b24d1af30692492726e1e2ca3ee7cbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(processGuess)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="newwordle_8cpp_1aa50d974f82ec55d3db340645d7a6a890" kindref="member">processGuess</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_newwordle.cpp" line="34" column="1" bodyfile="test_newwordle.cpp" bodystart="34" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="test__newwordle_8cpp_1a91515e0294fb9e3595be97314d5374b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int runwordletests</definition>
        <argsstring>()</argsstring>
        <name>runwordletests</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_newwordle.cpp" line="51" column="5" bodyfile="test_newwordle.cpp" bodystart="51" bodyend="60"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Wordle<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="newwordle_8h" kindref="compound">newwordle.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Simple<sp/>test<sp/>framework</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST(name)<sp/>static<sp/>void<sp/>test_##name(void)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RUN_TEST(name)<sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>printf(&quot;Running<sp/>%s...\n&quot;,<sp/>#name);<sp/>\</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>test_##name();<sp/>\</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>printf(&quot;%s<sp/>passed!\n&quot;,<sp/>#name);<sp/>\</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="test__newwordle_8cpp_1a45feb1f37ce559e49baf8655d769ef85" kindref="member">TEST</ref>(<ref refid="newwordle_8cpp_1a3f2a499774dc2aa652b360f036e6c41d" kindref="member">conatainsonlychar</ref>)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="newwordle_8cpp_1a3f2a499774dc2aa652b360f036e6c41d" kindref="member">conatainsonlychar</ref>(</highlight><highlight class="stringliteral">&quot;al-ha&quot;</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="newwordle_8cpp_1a3f2a499774dc2aa652b360f036e6c41d" kindref="member">conatainsonlychar</ref>(</highlight><highlight class="stringliteral">&quot;alpha&quot;</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="test__newwordle_8cpp_1a45feb1f37ce559e49baf8655d769ef85" kindref="member">TEST</ref>(<ref refid="newwordle_8cpp_1af0ed0f93c787ed9fd6d6a2823b6f8e02" kindref="member">toLowerCase</ref>)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>guess<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;HELLO&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>lower<sp/>=<sp/><ref refid="newwordle_8cpp_1af0ed0f93c787ed9fd6d6a2823b6f8e02" kindref="member">toLowerCase</ref>(guess);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(strcmp(lower,<sp/></highlight><highlight class="stringliteral">&quot;hello&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>alreadylower<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;hello&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>newlower<sp/>=<sp/><ref refid="newwordle_8cpp_1af0ed0f93c787ed9fd6d6a2823b6f8e02" kindref="member">toLowerCase</ref>(alreadylower);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(strcmp(newlower,<sp/></highlight><highlight class="stringliteral">&quot;hello&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="test__newwordle_8cpp_1a45feb1f37ce559e49baf8655d769ef85" kindref="member">TEST</ref>(<ref refid="newwordle_8cpp_1aa50d974f82ec55d3db340645d7a6a890" kindref="member">processGuess</ref>)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>answer<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;apple&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>guess<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;anvil&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(strcmp(<ref refid="newwordle_8cpp_1aa50d974f82ec55d3db340645d7a6a890" kindref="member">processGuess</ref>(answer,<sp/>guess),<sp/></highlight><highlight class="stringliteral">&quot;G___Y&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sec_guess<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;piper&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(strcmp(<ref refid="newwordle_8cpp_1aa50d974f82ec55d3db340645d7a6a890" kindref="member">processGuess</ref>(answer,<sp/>sec_guess),<sp/></highlight><highlight class="stringliteral">&quot;Y_GY_&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>third_guess<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;apple&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(strcmp(<ref refid="newwordle_8cpp_1aa50d974f82ec55d3db340645d7a6a890" kindref="member">processGuess</ref>(answer,<sp/>third_guess),<sp/></highlight><highlight class="stringliteral">&quot;GGGGG&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__newwordle_8cpp_1a91515e0294fb9e3595be97314d5374b9" kindref="member">runwordletests</ref>()<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Running<sp/>Wordle<sp/>unit<sp/>tests...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__newwordle_8cpp_1a6d22b2e20a26b0d72b5c15912b4e211e" kindref="member">RUN_TEST</ref>(<ref refid="newwordle_8cpp_1a3f2a499774dc2aa652b360f036e6c41d" kindref="member">conatainsonlychar</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__newwordle_8cpp_1a6d22b2e20a26b0d72b5c15912b4e211e" kindref="member">RUN_TEST</ref>(<ref refid="newwordle_8cpp_1af0ed0f93c787ed9fd6d6a2823b6f8e02" kindref="member">toLowerCase</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__newwordle_8cpp_1a6d22b2e20a26b0d72b5c15912b4e211e" kindref="member">RUN_TEST</ref>(<ref refid="newwordle_8cpp_1aa50d974f82ec55d3db340645d7a6a890" kindref="member">processGuess</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;All<sp/>tests<sp/>passed!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="test_newwordle.cpp"/>
  </compounddef>
</doxygen>
